/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import BOs.NegocioFachada;
import Entidades.LineaInvestigacion;
import Entidades.Programa;
import Entidades.Proyecto;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vastem.
 */
public class FrmBuscarProyecto extends javax.swing.JFrame {
    NegocioFachada negFac;
    DefaultTableModel modeloProg;
    DefaultTableModel modeloProy;
    
    /**
     * Creates new form PantallaProyectos
     */
    public FrmBuscarProyecto() {
        initComponents();
        negFac=new NegocioFachada();
        dateInicio.setEnabled(false);
        dateFinal.setEnabled(false);
        txtCampoBuscar.setVisible(true);
        setModeloProyecto();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCampoBuscar = new javax.swing.JTextField();
        fInicio = new javax.swing.JLabel();
        fFinal = new javax.swing.JLabel();
        botonBuscar = new javax.swing.JButton();
        scroll = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        proyecto = new javax.swing.JLabel();
        opcionComboBox = new javax.swing.JComboBox<>();
        dateInicio = new com.github.lgooddatepicker.components.DatePicker();
        dateFinal = new com.github.lgooddatepicker.components.DatePicker();
        jLabel2 = new javax.swing.JLabel();
        botonVolver = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Buscar proyecto");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Buscar Proyecto");
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));
        getContentPane().add(txtCampoBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 90, 188, -1));

        fInicio.setText("Fecha inicio:");
        fInicio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(fInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 55, -1, -1));

        fFinal.setText("Fecha finalización:");
        fFinal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(fFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 55, -1, -1));

        botonBuscar.setText("Buscar");
        botonBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(botonBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 440, 78, 42));

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombre", "Acrónimo ", "Programa", "Fecha inicio", "Fecha fin"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scroll.setViewportView(tbl);

        getContentPane().add(scroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 195, 900, 232));

        proyecto.setText("Proyectos");
        proyecto.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        getContentPane().add(proyecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 168, -1, -1));

        opcionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Codigo", "Nombre", "Acronimo", "Programa de Investigacion", "Periodo", "Todos" }));
        opcionComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        opcionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(opcionComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 52, 188, -1));
        getContentPane().add(dateInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 83, -1, -1));
        getContentPane().add(dateFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 83, -1, -1));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 490, -1, 10));

        botonVolver.setText("Volver");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });
        getContentPane().add(botonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 20, -1, -1));
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 0, 50, 20));

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 280, 80, 40));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 290, 10, 10));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void setModeloProyecto(){
        tbl.setModel(new javax.swing.table.DefaultTableModel(new Object [][] {},new String [] {"Código", "Nombre", "Acrónimo ", "Programa", "Fecha inicio", "Fecha fin"}
        ) {boolean[] canEdit = new boolean [] {false, false, false, false, false, false};public boolean isCellEditable(int rowIndex, int columnIndex) {return canEdit [columnIndex]; }});
        tbl.setRowSelectionAllowed(true);
    }
    
    private void setModeloPrograma(){
        tbl.setModel(new javax.swing.table.DefaultTableModel(new Object [][] {},new String [] {"Nombre"}) 
        {boolean[] canEdit = new boolean [] {false};public boolean isCellEditable(int rowIndex, int columnIndex) {return canEdit [columnIndex]; }});
        tbl.setRowSelectionAllowed(true);
    }
    
    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        if(validarVacio() && validarFormatos()){
            setTablaProyectos();
        }
        if(opcionComboBox.getSelectedItem()== "Programa de Investigacion"){
            botonBuscar.setEnabled(false);
        }
    }//GEN-LAST:event_botonBuscarActionPerformed

    private boolean validarVacio(){
        
        if(opcionComboBox.getSelectedItem()== "Codigo"){
            if(txtCampoBuscar.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Texto vacio");
            return false;
            }
        }
        else if(opcionComboBox.getSelectedItem()== "Nombre"){
            if(txtCampoBuscar.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Texto vacio");
            return false;
            }
        }
        else if(opcionComboBox.getSelectedItem()== "Acronimo"){
            if(txtCampoBuscar.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Texto vacio");
            return false;
            }
        }
        else if(opcionComboBox.getSelectedItem()=="Periodo"){
            if(dateInicio.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Ingrese la fecha inicial del proyecto");
            return false;
            }
            //Validar que se ingrese la fecha de fin del proyecto
            if(dateFinal.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Ingrese la fecha final del proyecto");
                return false;
            }
        }

        return true;
    }
    
    private boolean validarFormatos(){
        if(opcionComboBox.getSelectedItem()== "Periodo"){
            Calendar fechaInicio= Calendar.getInstance();
            fechaInicio.set(dateInicio.getDate().getYear(), dateInicio.getDate().getMonthValue()-1, dateInicio.getDate().getDayOfMonth(),0,0,0);
            Calendar fechaFin= Calendar.getInstance();
            fechaFin.set(dateFinal.getDate().getYear(), dateFinal.getDate().getMonthValue()-1, dateFinal.getDate().getDayOfMonth(),0,0,0);
            
            if(fechaInicio.compareTo(fechaFin)>=0){
                JOptionPane.showMessageDialog(this, "Ingrese un periodo de fechas válido");
                return false;
            }
        }

        return true;
    }
    
    private void opcionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionComboBoxActionPerformed
        /*
        Codigo
        Nombre
        Acronimo
        Programa de Investigacion
        */
        
        if(opcionComboBox.getSelectedItem()== "Codigo"){
            proyecto.setText("Proyectos");
            txtCampoBuscar.setText("");
            dateInicio.setEnabled(false);
            dateFinal.setEnabled(false);
            txtCampoBuscar.setVisible(true);
            botonBuscar.setEnabled(true);
            dateInicio.clear();
            dateFinal.clear();
            setModeloProyecto();
            clear();
        }
        if(opcionComboBox.getSelectedItem()== "Nombre"){
            proyecto.setText("Proyectos");
            txtCampoBuscar.setText("");
            dateInicio.setEnabled(false);
            dateFinal.setEnabled(false);
            txtCampoBuscar.setVisible(true);
            botonBuscar.setEnabled(true);
            dateInicio.clear();
            dateFinal.clear();
            setModeloProyecto();
            clear();
        }
        if(opcionComboBox.getSelectedItem()== "Acronimo"){
            proyecto.setText("Proyectos");
            txtCampoBuscar.setText("");
            dateInicio.setEnabled(false);
            dateFinal.setEnabled(false);
            txtCampoBuscar.setVisible(true);
            botonBuscar.setEnabled(true);
            dateInicio.clear();
            dateFinal.clear();
            setModeloProyecto();
            clear();
        }
        if(opcionComboBox.getSelectedItem()== "Programa de Investigacion"){
            proyecto.setText("Programas de Investigación");
            dateInicio.setEnabled(false);
            dateFinal.setEnabled(false);
            txtCampoBuscar.setVisible(false);
            botonBuscar.setEnabled(true);
            dateInicio.clear();
            dateFinal.clear();
            setModeloPrograma();
            setTablaProgramas();
        }
        if(opcionComboBox.getSelectedItem()== "Periodo"){
            proyecto.setText("Proyectos");
            dateInicio.setEnabled(true);
            dateFinal.setEnabled(true);
            txtCampoBuscar.setVisible(false);
            botonBuscar.setEnabled(true);
            dateInicio.clear();
            dateFinal.clear();
            setModeloProyecto();
            clear();
        }
        if(opcionComboBox.getSelectedItem()== "Todos"){
            proyecto.setText("Proyectos");
            dateInicio.setEnabled(false);
            dateFinal.setEnabled(false);
            txtCampoBuscar.setVisible(false);
            botonBuscar.setEnabled(true);
            dateInicio.clear();
            dateFinal.clear();
            setModeloProyecto();
            clear();
            setTablaProyectos();
        }
    }//GEN-LAST:event_opcionComboBoxActionPerformed

    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverActionPerformed
        FrmMenu menu = new FrmMenu();
        menu.setVisible(true);
        dispose();
    }//GEN-LAST:event_botonVolverActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if(tbl.getSelectedRow()>= 0){
            
            
            String cdg = (String) tbl.getValueAt(tbl.getSelectedRow(),0);
            Proyecto p;
            ArrayList l = (ArrayList) negFac.consultarProyectoCodigo(cdg);
            
            p = (Proyecto) l.get(0);
            FrmRegistrarProyecto edicion=new FrmRegistrarProyecto(p);
            edicion.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Seleccionar proyecto");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    public void setTablaProgramas(){
        List<Programa> list = negFac.consultarTodosProgramas();
        
        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        int rowCount = model.getRowCount();
        
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
          model.removeRow(i);
        }
        
        Object rowData[]=new Object[1];
        for(int i=0; i <list.size();i++){
            rowData[0]=list.get(i);
            model.addRow(rowData);
        }
    }
    
    public void setTablaProyectos(){
        List<Proyecto> list = null;
        
        switch(opcionComboBox.getSelectedIndex()){
            case 0:
                list = negFac.consultarProyectoCodigo(txtCampoBuscar.getText());
                break;
            case 1:
                list = negFac.consultarProyectoNombre(txtCampoBuscar.getText());
                break;
            case 2:
                list = negFac.consultarProyectoAcronimo(txtCampoBuscar.getText());
                break;
            case 3:
                int fila= tbl.getSelectedRow();
                Programa v = (Programa) tbl.getValueAt(fila,0);
                clear();
                
                setModeloProyecto();
                list = negFac.consultarProyectoPrograma(v.getNombre());
                break;
            case 4:
                Calendar fechaInicio= Calendar.getInstance();
                fechaInicio.set(dateInicio.getDate().getYear(), dateInicio.getDate().getMonthValue()-1, dateInicio.getDate().getDayOfMonth()-1,0,0,0);
                Calendar fechaFin= Calendar.getInstance();
                fechaFin.set(dateFinal.getDate().getYear(), dateFinal.getDate().getMonthValue()-1, dateFinal.getDate().getDayOfMonth(),0,0,0);

                list = negFac.consultarFechas(fechaInicio.getTime(), fechaFin.getTime());
                break;
            case 5:
                list = negFac.consultarTodosProyectos();
                break;
        }

        if(list == null){
            JOptionPane.showMessageDialog(this, "No se ha encontrado nada");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        int rowCount = model.getRowCount();
        
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
          model.removeRow(i);
        }
        
        Object rowData[]=new Object[6];
        for(int i=0; i <list.size();i++){
            rowData[0]=list.get(i).getCodigo();
            rowData[1]=list.get(i).getNombre();
            rowData[2]=list.get(i).getAcronimo();
            rowData[3]=list.get(i).getProgramaInvestigacion().getNombre();
            rowData[4]=list.get(i).getFechaInicio().toLocaleString();
            rowData[5]=list.get(i).getFechaFin().toLocaleString();
            model.addRow(rowData);
        }
    }
    
    public void clear(){
        proyecto.setText("Proyectos");
        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        int rowCount = model.getRowCount();
        
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
          model.removeRow(i);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRegistrarProfesor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonVolver;
    private javax.swing.JButton btnEditar;
    private com.github.lgooddatepicker.components.DatePicker dateFinal;
    private com.github.lgooddatepicker.components.DatePicker dateInicio;
    private javax.swing.JLabel fFinal;
    private javax.swing.JLabel fInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox<String> opcionComboBox;
    private javax.swing.JLabel proyecto;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txtCampoBuscar;
    // End of variables declaration//GEN-END:variables
}
